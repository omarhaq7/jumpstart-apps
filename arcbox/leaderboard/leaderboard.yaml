# Redis
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: game-demo
spec:
  replicas: 1
  selector: { matchLabels: { app: redis } }
  template:
    metadata: { labels: { app: redis } }
    spec:
      containers:
      - name: redis
        image: redis:7
        ports: [ { containerPort: 6379 } ]
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: game-demo
spec:
  selector: { app: redis }
  ports: [ { port: 6379, targetPort: 6379 } ]

---
# Leaderboard API + Web UI
apiVersion: apps/v1
kind: Deployment
metadata:
  name: leaderboard
  namespace: game-demo
spec:
  replicas: 1
  selector: { matchLabels: { app: leaderboard } }
  template:
    metadata: { labels: { app: leaderboard } }
    spec:
      imagePullSecrets:
      - name: acr-pull-secret                 # already created in game-demo
      containers:
      - name: leaderboard
        image: arck3registry.azurecr.io/leaderboard:1.2
        ports: [ { containerPort: 8080 } ]
        env:
        - name: PORT
          value: "8080"
        - name: REDIS_URL
          value: "redis://redis:6379"
        readinessProbe:
          httpGet: { path: /readyz, port: 8080 }
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet: { path: /healthz, port: 8080 }
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: leaderboard
  namespace: game-demo
spec:
  type: LoadBalancer
  selector: { app: leaderboard }
  ports: [ { name: http, port: 80, targetPort: 8080 } ]
